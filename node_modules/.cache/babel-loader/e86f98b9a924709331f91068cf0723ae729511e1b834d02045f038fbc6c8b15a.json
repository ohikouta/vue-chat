{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0d24228f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chat-view\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MessageList = _resolveComponent(\"MessageList\");\n  const _component_MessageInput = _resolveComponent(\"MessageInput\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_MessageList, {\n    messages: $setup.messages\n  }, null, 8, [\"messages\"]), _createVNode(_component_MessageInput, {\n    onSendMessage: $setup.sendMessage\n  }, null, 8, [\"onSendMessage\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_MessageList","messages","$setup","_component_MessageInput","onSendMessage","sendMessage"],"sources":["/Users/koutaohi/docker/vue-chat/vueApp/vue-sample/src/views/ChatView.vue"],"sourcesContent":["<template>\n  <div class=\"chat-view\">\n    <MessageList :messages=\"messages\" />\n    <MessageInput @sendMessage=\"sendMessage\" />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { collection, addDoc, onSnapshot } from 'firebase/firestore';\nimport { auth } from '../firebaseConfig';  // ここで firebaseConfig.js から auth をインポート\nimport { onAuthStateChanged } from 'firebase/auth'; \nimport { db } from '../firebaseConfig';\nimport MessageList from '../components/MessageList.vue';\nimport MessageInput from '../components/MessageInput.vue';\n\nexport default {\n  components: {\n    MessageList,\n    MessageInput\n  },\n  setup() {\n    const messages = ref([]);\n    const currentUser = ref(null);\n\n    const fetchMessages = () => {\n      const q = collection(db, \"messages\");\n      onSnapshot(q, (querySnapshot) => {\n        messages.value = querySnapshot.docs.map(doc => doc.data());\n        console.log(\"Loaded messages:\", messages.value);\n      });\n    };\n\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        currentUser.value = user;\n        console.log('User is logged in:', user.uid);\n      } else {\n        console.error('No user is signed in');\n      }\n    });\n\n    const sendMessage = async (message) => {\n      try {\n        if (currentUser.value) {\n          await addDoc(collection(db, \"messages\"), {\n            text: message,\n            timestamp: new Date(),\n            userId: currentUser.value.uid,\n            userName: currentUser.value.displayName,\n          });\n        } else {\n          console.error(\"User is not logged in or currentUser is null\");\n        }\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n    };\n\n    onMounted(fetchMessages);\n\n    return {\n      messages,\n      sendMessage\n    };\n  }\n};\n\n</script>\n\n<style scoped>\n.chat-view {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: space-between;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;;;uBAAtBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAAoCC,sBAAA;IAAtBC,QAAQ,EAAEC,MAAA,CAAAD;EAAQ,2BAChCF,YAAA,CAA2CI,uBAAA;IAA5BC,aAAW,EAAEF,MAAA,CAAAG;EAAW,+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}