{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { collection, addDoc, onSnapshot } from 'firebase/firestore';\nimport { auth } from '../firebaseConfig'; // ここで firebaseConfig.js から auth をインポート\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { db } from '../firebaseConfig';\nimport MessageList from '../components/MessageList.vue';\nimport MessageInput from '../components/MessageInput.vue';\nexport default {\n  components: {\n    MessageList,\n    MessageInput\n  },\n  setup() {\n    const messages = ref([]);\n    const currentUser = ref(null);\n    const fetchMessages = () => {\n      const q = collection(db, \"messages\");\n      onSnapshot(q, querySnapshot => {\n        messages.value = querySnapshot.docs.map(doc => doc.data());\n        console.log(\"Loaded messages:\", messages.value);\n      });\n    };\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        currentUser.value = user;\n        console.log('User is logged in:', user.uid);\n      } else {\n        console.error('No user is signed in');\n      }\n    });\n    const sendMessage = async message => {\n      try {\n        if (currentUser.value) {\n          await addDoc(collection(db, \"messages\"), {\n            text: message,\n            timestamp: new Date(),\n            userId: currentUser.value.uid,\n            userName: currentUser.value.displayName\n          });\n        } else {\n          console.error(\"User is not logged in or currentUser is null\");\n        }\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n    };\n    onMounted(fetchMessages);\n    return {\n      messages,\n      currentUser,\n      sendMessage\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","collection","addDoc","onSnapshot","auth","onAuthStateChanged","db","MessageList","MessageInput","components","setup","messages","currentUser","fetchMessages","q","querySnapshot","value","docs","map","doc","data","console","log","user","uid","error","sendMessage","message","text","timestamp","Date","userId","userName","displayName","e"],"sources":["/usr/src/app/src/views/ChatView.vue"],"sourcesContent":["<template>\n  <div class=\"chat-view\">\n    <MessageList :messages=\"messages\" :currentUser=\"currentUser\" />\n    <MessageInput @sendMessage=\"sendMessage\" />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { collection, addDoc, onSnapshot } from 'firebase/firestore';\nimport { auth } from '../firebaseConfig';  // ここで firebaseConfig.js から auth をインポート\nimport { onAuthStateChanged } from 'firebase/auth'; \nimport { db } from '../firebaseConfig';\nimport MessageList from '../components/MessageList.vue';\nimport MessageInput from '../components/MessageInput.vue';\n\nexport default {\n  components: {\n    MessageList,\n    MessageInput\n  },\n  setup() {\n    const messages = ref([]);\n    const currentUser = ref(null);\n\n    const fetchMessages = () => {\n      const q = collection(db, \"messages\");\n      onSnapshot(q, (querySnapshot) => {\n        messages.value = querySnapshot.docs.map(doc => doc.data());\n        console.log(\"Loaded messages:\", messages.value);\n      });\n    };\n\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        currentUser.value = user;\n        console.log('User is logged in:', user.uid);\n      } else {\n        console.error('No user is signed in');\n      }\n    });\n\n    const sendMessage = async (message) => {\n      try {\n        if (currentUser.value) {\n          await addDoc(collection(db, \"messages\"), {\n            text: message,\n            timestamp: new Date(),\n            userId: currentUser.value.uid,\n            userName: currentUser.value.displayName,\n          });\n        } else {\n          console.error(\"User is not logged in or currentUser is null\");\n        }\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n    };\n\n    onMounted(fetchMessages);\n\n    return {\n      messages,\n      currentUser,\n      sendMessage\n    };\n  }\n};\n\n</script>\n\n<style scoped>\n.chat-view {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: space-between;\n}\n</style>\n"],"mappings":"AAQA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,UAAU,EAAEC,MAAM,EAAEC,UAAS,QAAS,oBAAoB;AACnE,SAASC,IAAG,QAAS,mBAAmB,EAAG;AAC3C,SAASC,kBAAiB,QAAS,eAAe;AAClD,SAASC,EAAC,QAAS,mBAAmB;AACtC,OAAOC,WAAU,MAAO,+BAA+B;AACvD,OAAOC,YAAW,MAAO,gCAAgC;AAEzD,eAAe;EACbC,UAAU,EAAE;IACVF,WAAW;IACXC;EACF,CAAC;EACDE,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIZ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMa,WAAU,GAAIb,GAAG,CAAC,IAAI,CAAC;IAE7B,MAAMc,aAAY,GAAIA,CAAA,KAAM;MAC1B,MAAMC,CAAA,GAAIb,UAAU,CAACK,EAAE,EAAE,UAAU,CAAC;MACpCH,UAAU,CAACW,CAAC,EAAGC,aAAa,IAAK;QAC/BJ,QAAQ,CAACK,KAAI,GAAID,aAAa,CAACE,IAAI,CAACC,GAAG,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;QAC1DC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEX,QAAQ,CAACK,KAAK,CAAC;MACjD,CAAC,CAAC;IACJ,CAAC;IAEDX,kBAAkB,CAACD,IAAI,EAAGmB,IAAI,IAAK;MACjC,IAAIA,IAAI,EAAE;QACRX,WAAW,CAACI,KAAI,GAAIO,IAAI;QACxBF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,IAAI,CAACC,GAAG,CAAC;MAC7C,OAAO;QACLH,OAAO,CAACI,KAAK,CAAC,sBAAsB,CAAC;MACvC;IACF,CAAC,CAAC;IAEF,MAAMC,WAAU,GAAI,MAAOC,OAAO,IAAK;MACrC,IAAI;QACF,IAAIf,WAAW,CAACI,KAAK,EAAE;UACrB,MAAMd,MAAM,CAACD,UAAU,CAACK,EAAE,EAAE,UAAU,CAAC,EAAE;YACvCsB,IAAI,EAAED,OAAO;YACbE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;YACrBC,MAAM,EAAEnB,WAAW,CAACI,KAAK,CAACQ,GAAG;YAC7BQ,QAAQ,EAAEpB,WAAW,CAACI,KAAK,CAACiB;UAC9B,CAAC,CAAC;QACJ,OAAO;UACLZ,OAAO,CAACI,KAAK,CAAC,8CAA8C,CAAC;QAC/D;MACF,EAAE,OAAOS,CAAC,EAAE;QACVb,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAES,CAAC,CAAC;MAC7C;IACF,CAAC;IAEDlC,SAAS,CAACa,aAAa,CAAC;IAExB,OAAO;MACLF,QAAQ;MACRC,WAAW;MACXc;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}