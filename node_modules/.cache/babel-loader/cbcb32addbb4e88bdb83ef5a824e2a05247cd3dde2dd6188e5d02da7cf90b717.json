{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Register\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"email\",\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    placeholder: \"Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.register && $options.register(...args))\n  }, \"Register\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_cache","$event","$data","email","type","placeholder","password","onClick","args","$options","register"],"sources":["/usr/src/app/src/components/RegisterComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Register</h2>\n    <input v-model=\"email\" type=\"email\" placeholder=\"Email\" />\n    <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\n    <button @click=\"register\">Register</button>\n  </div>\n</template>\n\n<script>\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebaseConfig\";\n\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    async register() {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, this.email, this.password);\n        console.log(\"User registered:\", userCredential.user);\n        // ユーザー登録成功後の処理（例：リダイレクト）\n      } catch (error) {\n        console.error(\"Registration error:\", error);\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";;gCAEIA,mBAAA,CAAiB,YAAb,UAAQ;;uBADdC,mBAAA,CAKM,cAJJC,UAAiB,E,gBACjBF,mBAAA,CAA0D;IAH9D,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGoBC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,IAAI,EAAC,OAAO;IAACC,WAAW,EAAC;iDAAhCH,KAAA,CAAAC,KAAK,E,mBACrBN,mBAAA,CAAmE;IAJvE,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIoBC,KAAA,CAAAI,QAAQ,GAAAL,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC;iDAAtCH,KAAA,CAAAI,QAAQ,E,GACxBT,mBAAA,CAA2C;IAAlCU,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,UAAQ,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}